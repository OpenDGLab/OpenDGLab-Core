name: Build Release
on:
  create:
    tags:
      - v*
jobs:
  gradle:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Get latest release version number
      id: get_version
      uses: battila7/get-version-action@v2
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build
      run: ./gradlew assemble
    - name: Install zip
      uses: montudor/action-zip@v0.1.1
    - name: Packaging Linux x64
      if: matrix.os == 'windows-latest'
      run: zip -qq -r OpenDGLab-Core-Linux-X64.zip build/bin/linuxX64
    - name: Packaging Linux arm64
      if: matrix.os == 'windows-latest'
      run: zip -qq -r OpenDGLab-Core-Linux-Arm64.zip build/bin/linuxArm64
    - name: Packaging Windows x86
      if: matrix.os == 'windows-latest'
      run: zip -qq -r OpenDGLab-Core-Windows-X86.zip build/bin/winX86
    - name: Packaging Windows x86
      if: matrix.os == 'windows-latest'
      run: zip -qq -r OpenDGLab-Core-Windows-X64.zip build/bin/winX64
    - name: Packaging MacOS x64
      if: matrix.os == 'macos-latest'
      run: zip -qq -r OpenDGLab-Core-MacOS-X64.zip build/bin/macosX64
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: OpenDGLab Core ${{ steps.get_version.outputs.version }}
        body: |
          OpenDGLab Core ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
    - name: Upload Release Asset Linux x64
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'windows-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenDGLab-Core-Linux-X64.zip
        asset_name: OpenDGLab-Core-Linux-X64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset Linux arm64
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'windows-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenDGLab-Core-Linux-Arm64.zip
        asset_name: OpenDGLab-Core-Linux-Arm64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset Windows x86
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'windows-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenDGLab-Core-Windows-X86.zip
        asset_name: OpenDGLab-Core-Windows-X86.zip
        asset_content_type: application/zip
    - name: Upload Release Asset Windows x64
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'windows-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenDGLab-Core-Windows-X64.zip
        asset_name: OpenDGLab-Core-Windows-X64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset MacOS x64
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'macos-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenDGLab-Core-MacOS-X64.zip
        asset_name: OpenDGLab-Core-MacOS-X64.zip
        asset_content_type: application/zip